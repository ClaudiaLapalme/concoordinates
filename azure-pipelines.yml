# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  discord_webhook: https://discordapp.com/api/webhooks/666446406042648593/rxbbIKpP5sH7w-I8iTNEiiXWeTuOLCCsGX8iiPSu4ygSisGQaOgOrN830SVOHI7KUtYu
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: build_and_test
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g @angular/cli
      npm install puppeteer --save-dev
      npm install
    displayName: 'npm install dependencies and build'
    
  - script: |
      npm update
    displayName: 'Update modules'

  - script: ng test --watch=false --code-coverage
    displayName: 'Run ng test'

  - script: |
       curl -X POST --data '{"content":"Pipeline completed.\nPipeline Status: $(Agent.JobStatus)\nCommit tag: $(Build.SourceVersion)\nCommit message: $(Build.SourceVersionMessage)\n"}' -H "Accept: application/json" -H "Content-Type: application/json" $(discord_webhook)
    displayName: 'Notify Discord'

- job: sonar_scan
  steps:
    
    - script: docker run -d --name sonarqube -p 9000:9000 sonarqube
      displayName: 'Launch SonarQube instance'
      
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: 'SonarQubeLocal'
        scannerMode: 'CLI'
        configMode: 'file'
    - task: SonarQubeAnalyze@4
    - task: SonarQubePublish@4
      inputs:
        pollingTimeoutSec: '300'